{"version":3,"file":"static/js/312.dcca9012.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.styled.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectContactsFilter = state => state.filter;\n\n","import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {Box,Button,Container,TextField,} from '@mui/material';\n\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    \n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        \n        const form = event.target;\n        const formName = form.elements.name.value;\n        const formNumber = form.elements.phone.value;\n \n        if (contacts.some(({ name }) => name.toLowerCase() === formName.toLowerCase())) {\n            return toast.warn(`${formName} is already in contacts`);\n        }\n        if (contacts.some(({ number }) => number === formNumber)) {\n            return toast.warn(`${formNumber} is already in contacts`);\n        }\n      dispatch(addContact({ name: formName, number: formNumber }));\n      console.log();\n        toast.success(`${formName} is added to the contacts!`);\n        form.reset();\n            \n    };\n    \n    return (\n        <Container\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignContent: 'center',\n      }}\n    >\n      <Box\n        sx={{\n          width: '420px',\n          textAlign: 'center',\n          mt: '50px',\n          p: '10px',\n          border: '2px solid #17046b',\n          bgcolor: '#ebf1f1',\n          borderRadius: '20px',\n        }}\n      >\n         <form onSubmit={handleSubmit}>\n          <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n            <TextField\n              label=\"Name\"\n              name=\"name\"\n              required\n              variant=\"standard\"\n              id=\"outlined-start-adornment\"\n              sx={{ m: 1, width: '100%' }}\n              type=\"text\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"For example Adrian, Jacob Mercer\"\n                     \n            />\n            </Box>\n            <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n            <TextField\n              label=\"Phone\"\n              name=\"phone\"\n              required\n              variant=\"standard\"\n              id=\"standard-basic\"\n              title=\"111-11-11\"\n              sx={{ m: 1, width: '100%' }}\n            ></TextField>\n          </Box>\n          \n          <Button  type=\"submit\" variant=\"contained\">\n           Add contact\n          </Button>\n                </form>\n            </Box>\n            </Container>\n           \n)\n};\n\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n    display: flex;\n   flex-direction: column;\n    gap: 5px;\n    width: 300px;\n   `;\n\nexport const Item = styled.li`\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    height: 30px;\n`;\n\nexport const Name = styled.p`\n    font-weight: 600;\n    color: #082b6d;\n`;\n\n// export const Button = styled.button`\n//     margin-left:auto;\n//     height: 20px;\n//    cursor: pointer;\n// `;","import { useSelector,useDispatch} from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { List, Item, Name } from './ContactList.styled';\nimport {Box, Container, Button} from '@mui/material';\n\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(state => {\n        return state.contacts.items.filter(item =>\n            item.name.toLowerCase().trim().includes(state.filter.toLowerCase().trim()))\n      });\n    \n    return (\n    <Container\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n         alignContent: 'center',\n         \n      }}\n    >\n      <Box\n        sx={{\n          width: '420px',\n          textAlign: 'center',\n          mt: '10px',\n          p: '10px',\n          border: '2px solid #17046b',\n          bgcolor: '#ebf1f1',\n          borderRadius: '20px',\n        }}\n      >\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <Item key={id}>\n                    <Name>{name}:</Name>\n                    <Name>{number}</Name>\n                    <Button sx={{\n                            ml: 'auto',\n                            p:0,\n                        }}\n                        type=\"button\"\n                        variant=\"contained\"\n                        id={id}\n                        onClick={() => dispatch(deleteContact(id))}>Delete</Button>\n                </Item>\n            ))\n            }\n            </List>\n        </Box>\n    </Container>\n    );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n    display:flex;\n    flex-direction: column;\n\n    h2{\n        font-size: 30px;\n        color:  #082b6d;\n        margin: 0;\n    }\n\n    p{\n        font-size: 20px;\n        color: #568bee;\n        margin: 0;\n        padding: 0;\n    }\n`;\n\nexport const Input = styled.input`\n    width: 200px;\n    margin-top: 5px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsFilter } from 'redux/contacts/selectors';\nimport { setContactsFilter } from 'redux/contacts/filterSlice';\nimport { Label} from './Filter.styled';\nimport {Box,Container,TextField} from '@mui/material';\n\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectContactsFilter);\n\n    const handleChangeFilter =({currentTarget:{value}}) => {\n        const dataValue = value.toLowerCase().trim();\n        dispatch(setContactsFilter(dataValue))\n    };\n\n    return (\n  <Container\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n         alignContent: 'center',\n         \n      }}\n    >\n      <Box\n        sx={{\n          width: '420px',\n          textAlign: 'center',\n          mt: '10px',\n          p: '10px',\n          border: '2px solid #17046b',\n          bgcolor: '#ebf1f1',\n          borderRadius: '20px',\n        }}\n      >\n        <Label>\n            <h2>Contacts</h2>\n            <p>Find contacts by name</p>     \n            <TextField\n              type=\"text\"\n              label=\"Name\"\n              name=\"filter\"\n              required\n              variant=\"standard\"\n              id=\"outlined-start-adornment\"\n              value={filter}\n              onChange={handleChangeFilter} \n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\" For example Adrian, Jacob Mercer\"\n              sx={{ m: 1, width: '100%' }}\n            />\n            </Label>\n            </Box>\n        </Container>\n    );\n\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n    margin-top:40px;\n`;","import { useDispatch} from 'react-redux';\nimport { useEffect } from 'react';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Container } from 'components/App/App.styled';\n\n\n const Contacts = () => {  \n  const dispatch = useDispatch();\n  \n     useEffect(() => {\n    dispatch(fetchContacts());\n     }, [dispatch]);\n    \n    \n    return(\n      <Container>\n      <ContactForm />\n      <Filter />\n      \n      <ContactList /> \n        <ToastContainer\n          position=\"top-center\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          theme=\"colored\"\n/>\n      \n    </Container>\n  )\n};\n\nexport default Contacts;"],"names":["selectContacts","state","contacts","items","selectContactsFilter","filter","ContactForm","dispatch","useDispatch","useSelector","Container","sx","display","justifyContent","alignContent","Box","width","textAlign","mt","p","border","bgcolor","borderRadius","onSubmit","event","preventDefault","form","target","formName","elements","name","value","formNumber","phone","some","toLowerCase","toast","number","addContact","console","log","reset","alignItems","TextField","label","required","variant","id","m","type","pattern","title","Button","List","styled","Item","Name","ContactList","item","trim","includes","map","ml","onClick","deleteContact","Label","Filter","onChange","dataValue","currentTarget","setContactsFilter","useEffect","fetchContacts","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme"],"sourceRoot":""}